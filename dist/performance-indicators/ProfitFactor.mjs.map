{"version":3,"sources":["../../src/performance-indicators/ProfitFactor.mjs"],"names":["ProfitFactor","calculate","backtestInstance","upAndDown","positions","data","reduce","prev","entry","forEach","value","closedPositions","closedPosition","up","down","undefined","Math","abs","getName"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAE9BC,EAAAA,SAAS,CAACC,gBAAD,EAAmB;AACxB;AACA;AACA,UAAMC,SAAS,GAAGD,gBAAgB,CAACE,SAAjB,CAA2BC,IAA3B,CAAgCC,MAAhC,CAAuC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtE;AACAA,MAAAA,KAAK,CAACC,OAAN,CAAeC,KAAD,IAAW;AACrB,YAAIA,KAAK,CAACC,eAAV,EAA2B;AACvBD,UAAAA,KAAK,CAACC,eAAN,CAAsBF,OAAtB,CAA+BG,cAAD,IAAoB;AAC9C,gBAAIA,cAAc,CAACF,KAAf,GAAuB,CAA3B,EAA8BH,IAAI,CAACM,EAAL,IAAWD,cAAc,CAACF,KAA1B,CAA9B,KACKH,IAAI,CAACO,IAAL,IAAaF,cAAc,CAACF,KAA5B;AACR,WAHD;AAIH;AACJ,OAPD;AAQA,aAAOH,IAAP;AACH,KAXiB,EAWf;AAAEM,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAXe,CAAlB,CAHwB,CAexB;;AACA,QAAIX,SAAS,CAACU,EAAV,KAAiB,CAAjB,IAAsBV,SAAS,CAACW,IAAV,KAAmB,CAA7C,EAAgD,OAAOC,SAAP;AAChD,WAAOZ,SAAS,CAACU,EAAV,GAAeG,IAAI,CAACC,GAAL,CAASd,SAAS,CAACW,IAAnB,CAAtB;AACH;;AAEDI,EAAAA,OAAO,GAAG;AACN,WAAO,cAAP;AACH;;AAxB6B","sourcesContent":["export default class ProfitFactor {\n\n    calculate(backtestInstance) {\n        // For every position that was closed, calculate if it went up or down; sum up all ups \n        // and downs.\n        const upAndDown = backtestInstance.positions.data.reduce((prev, entry) => {\n            // key is an instrument or date or type. \n            entry.forEach((value) => {\n                if (value.closedPositions) {\n                    value.closedPositions.forEach((closedPosition) => {\n                        if (closedPosition.value > 0) prev.up += closedPosition.value;\n                        else prev.down += closedPosition.value;\n                    });\n                }\n            });\n            return prev;\n        }, { up: 0, down: 0 });\n        // Undefined if no data was provided\n        if (upAndDown.up === 0 && upAndDown.down === 0) return undefined;\n        return upAndDown.up / Math.abs(upAndDown.down);\n    }\n\n    getName() {\n        return 'ProfitFactor';\n    }\n\n}"],"file":"ProfitFactor.mjs"}