{"version":3,"sources":["../../src/data-series/convertObjectToMap.mjs"],"names":["convertObjectToMap","object","Error","map","Map","Object","keys","concat","getOwnPropertySymbols","forEach","key","set"],"mappings":"AAAA;;;;;AAKA,eAAe,SAASA,kBAAT,CAA4BC,MAA5B,EAAoC;AAElD,MAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAA7C,EAAmD,MAAM,IAAIC,KAAJ,CAAW;;iBAAX,CAAN;AAInD,QAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,CAA2BF,MAAM,CAACG,qBAAP,CAA6BP,MAA7B,CAA3B,EAAiEQ,OAAjE,CAA0EC,GAAD,IAAS;AACjFP,IAAAA,GAAG,CAACQ,GAAJ,CAAQD,GAAR,EAAaT,MAAM,CAACS,GAAD,CAAnB;AACA,GAFD;AAGA,SAAOP,GAAP;AAEA","sourcesContent":["/**\n* Takes an object and converts its keys (objects/strings) to a Map\n* @param {object} object\t\tObject to convert\n* @returns {Map}\n*/\nexport default function convertObjectToMap(object) {\n\n\tif (typeof object !== 'object' || object === null) throw new Error(`convertObjectToMap: \n        When converting an object to a map, pass an object as only parameter; it may not\n        be null.`);\n\n\tconst map = new Map();\n\tObject.keys(object).concat(Object.getOwnPropertySymbols(object)).forEach((key) => {\n\t\tmap.set(key, object[key]);\t\t\n\t});\n\treturn map;\n    \n}"],"file":"convertObjectToMap.mjs"}