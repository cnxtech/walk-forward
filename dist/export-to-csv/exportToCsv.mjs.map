{"version":3,"sources":["../../src/export-to-csv/exportToCsv.mjs"],"names":["csv","logger","debug","path","dataAsArray","Promise","resolve","reject","writeToPath","transform","row","map","field","Date","toISOString","on","err","Error"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,MAAM,CAAC,yBAAD,CAAxB;AAEA;;;;;;;AAMA,eAAe,UAASE,IAAT,EAAeC,WAAf,EAA4B;AAEvC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCP,IAAAA,GAAG,CACEQ,WADL,CACiBL,IADjB,EACuBC,WADvB,EACoC;AAC5BK,MAAAA,SAAS,EAAGC,GAAD,IAAS;AAChB;AACA,eAAOA,GAAG,CAACC,GAAJ,CAASC,KAAD,IAAWA,KAAK,YAAYC,IAAjB,GAAwBD,KAAK,CAACE,WAAN,EAAxB,GAA8CF,KAAjE,CAAP;AACH;AAJ2B,KADpC,EAOKG,EAPL,CAOQ,QAPR,EAOkB,MAAM;AAChBb,MAAAA,KAAK,CAAC,mBAAD,EAAsBC,IAAtB,CAAL;AACAG,MAAAA,OAAO;AACV,KAVL,EAWKS,EAXL,CAWQ,OAXR,EAWkBC,GAAD,IAAS;AAClBd,MAAAA,KAAK,CAAC,8BAAD,EAAiCc,GAAjC,CAAL;AACAT,MAAAA,MAAM,CAAC,IAAIU,KAAJ,CAAUD,GAAV,CAAD,CAAN;AACH,KAdL;AAeH,GAhBM,CAAP;AAkBH","sourcesContent":["import csv from 'fast-csv';\nimport logger from '../logger/logger';\n\nconst { debug } = logger('WalkForward:exportToCsv');\n\n/**\n * Wraps writeToPath into a promise\n * @param  {string} path        Path to write file to\n * @param  {Array} dataAsArray  Data to write to CSV\n * @return {Promise}\n */\nexport default function(path, dataAsArray) {\n\n    return new Promise((resolve, reject) => {\n        csv\n            .writeToPath(path, dataAsArray, {\n                transform: (row) => {\n                    // Transform dates to ISO string; default JS toString is hardly parsable\n                    return row.map((field) => field instanceof Date ? field.toISOString() : field);\n                }\n            })\n            .on('finish', () => {\n                debug('Data stored to %s', path);\n                resolve();\n            })\n            .on('error', (err) => {\n                debug('Data could not be stored, %o', err);\n                reject(new Error(err));\n            });\n    });\n\n}\n"],"file":"exportToCsv.mjs"}