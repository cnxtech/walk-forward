{"version":3,"sources":["../../src/combine-parameters/combineParameters.mjs"],"names":["logger","debug","combineParameters","parameters","Array","from","reduce","prev","item","newParamCombinations","forEach","parameterValue","existingParameter","newCombination","Map","set","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,MAAM,CAAC,+BAAD,CAAxB;AACA;;;;;;;;;;;;;;AAcA,eAAe,SAASE,iBAAT,CAA2BC,UAA3B,EAAuC;AAErD,SAAOC,KAAK,CAACC,IAAN,CAAWF,UAAX,EAAuBG,MAAvB,CAA8B,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACpD,UAAMC,oBAAoB,GAAG,EAA7B;AACAD,IAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAiBC,cAAD,IAAoB;AACnCJ,MAAAA,IAAI,CAACG,OAAL,CAAcE,iBAAD,IAAuB;AACnC,cAAMC,cAAc,GAAG,IAAIC,GAAJ,CAAQF,iBAAR,CAAvB;AACAC,QAAAA,cAAc,CAACE,GAAf,CAAmBP,IAAI,CAAC,CAAD,CAAvB,EAA4BG,cAA5B;AACAF,QAAAA,oBAAoB,CAACO,IAArB,CAA0BH,cAA1B;AACA,OAJD;AAKA,KAND;AAOAZ,IAAAA,KAAK,CAAC,mCAAD,EAAsCQ,oBAAtC,CAAL;AACA,WAAOA,oBAAP;AACA,GAXM,EAWJ,CAAC,IAAIK,GAAJ,EAAD,CAXI,CAAP;AAaA","sourcesContent":["import logger from '../logger/logger';\nconst { debug } = logger('WalkForward:combineParameters');\n/**\n* Takes parameters as a Map in the form of: \n* const a = new Map();\n* a.set('parameterA', [value1, value2]);\n* a.set('parameterB', [value1, value2]);\n* Then returns all possible parameter combinations as maps (written in object for the sake of\n* simplicity) in an array:\n* [{ parameterA: value1, parameterB: value1 }, { parameterA: value1, parameterB: value2 }\n*  { parameterA: value2, parameterB: value1 }, { parameterA: value2, parameterB: value2 }]\n* @param {Map} parameters\t\t\tParameters to combine. Key is param name, value is an array\n*\t\t\t\t\t\t\t\t\tof parameter values.\n* @returns {Map[]}\n*/\n\nexport default function combineParameters(parameters) {\n\n\treturn Array.from(parameters).reduce((prev, item) => {\n\t\tconst newParamCombinations = [];\n\t\titem[1].forEach((parameterValue) => {\n\t\t\tprev.forEach((existingParameter) => {\n\t\t\t\tconst newCombination = new Map(existingParameter);\n\t\t\t\tnewCombination.set(item[0], parameterValue);\n\t\t\t\tnewParamCombinations.push(newCombination);\n\t\t\t});\n\t\t});\n\t\tdebug('New parameter combinations are %o', newParamCombinations);\n\t\treturn newParamCombinations;\n\t}, [new Map()]);\n\n}\n\n\n"],"file":"combineParameters.mjs"}