{"version":3,"sources":["../../../src/sources/csv/CSVSource.mjs"],"names":["InstrumentCSVSource","BacktestCSVSource","getInstrumentNameFromFileName","CSVSource","constructor","pathSpecs","instrumentCSVSource","backtestCSVSource","generate"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,6BAAP,MAA0C,iCAA1C;AAEA;;;;;AAIA,eAAe,MAAMC,SAAN,CAAgB;AAC3BC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,UAAMC,mBAAmB,GAAG,IAAIN,mBAAJ,CACxBE,6BADwB,EAExBG,SAFwB,CAA5B;AAIA,SAAKE,iBAAL,GAAyB,IAAIN,iBAAJ,CAAsBK,mBAAtB,CAAzB;AACH;;AAEDE,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKD,iBAAL,CAAuBC,QAAvB,EAAP;AACH;;AAX0B","sourcesContent":["import InstrumentCSVSource from './InstrumentCSVSource';\nimport BacktestCSVSource from './BacktestCSVSource';\nimport getInstrumentNameFromFileName from './getInstrumentNameFromFileName';\n\n/**\n * Backtest specific CSV source that is exported. Basically merges InstrumentCSVSource and\n * BacktestCSVSource that were separated for easier testing.\n */\nexport default class CSVSource {\n    constructor(pathSpecs) {\n        const instrumentCSVSource = new InstrumentCSVSource(\n            getInstrumentNameFromFileName,\n            pathSpecs,\n        );\n        this.backtestCSVSource = new BacktestCSVSource(instrumentCSVSource);\n    }\n\n    generate() {\n        return this.backtestCSVSource.generate();\n    }\n\n}\n"],"file":"CSVSource.mjs"}