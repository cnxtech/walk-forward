{"version":3,"sources":["../../src/indicators/indicators.mjs"],"names":["tulind","createIndicator","addChartConfig","Abs","indicators","abs","Acos","acos","Ad","ad","Add","add","Adosc","adosc","Adx","adx","Adxr","adxr","Ao","ao","Apo","apo","Aroon","aroon","Aroonosc","aroonosc","Asin","asin","Atan","atan","Atr","atr","Avgprice","avgprice","Bbands","bbands","Bop","bop","Cci","cci","Ceil","ceil","Cmo","cmo","Cos","cos","Cosh","cosh","Crossany","crossany","Crossover","crossover","Cvi","cvi","Decay","decay","Dema","dema","Di","di","Div","div","Dm","dm","Dpo","dpo","Dx","dx","Edecay","edecay","Ema","ema","Emv","emv","Exp","exp","Fisher","fisher","Floor","floor","Fosc","fosc","Hma","hma","Kama","kama","Kvo","kvo","Lag","lag","Linreg","linreg","Linregintercept","linregintercept","Linregslope","linregslope","Ln","ln","Log10","log10","Macd","macd","Marketfi","marketfi","Mass","mass","Max","max","Md","md","Medprice","medprice","Mfi","mfi","Min","min","Mom","mom","Msw","msw","Mul","mul","Natr","natr","Nvi","nvi","Obv","obv","Ppo","ppo","Psar","psar","Pvi","pvi","Qstick","qstick","Roc","roc","Rocr","rocr","Round","round","Rsi","rsi","Sin","sin","Sinh","sinh","Sma","sma","Sqrt","sqrt","Stddev","stddev","Stderr","stderr","Stoch","stoch","StochRSI","stochrsi","Sub","sub","Sum","sum","Tan","tan","Tanh","tanh","Tema","tema","Todeg","todeg","Torad","torad","Tr","tr","Trima","trima","Trix","trix","Trunc","trunc","Tsf","tsf","Typprice","typprice","Ultosc","ultosc","Variance","var","Vhf","vhf","Vidya","vidya","Volatility","volatility","Vosc","vosc","Vwma","vwma","Wad","wad","Wcprice","wcprice","Wilders","wilders","Willr","willr","Wma","wma","Zlema","zlema"],"mappings":"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","sourcesContent":["import tulind from 'tulind';\nimport createIndicator from './createIndicator.mjs';\nimport addChartConfig from './addChartConfig.mjs';\n\n/**\n* Provides a central export for all indicators.\n* We use tulip indicators because:\n* - Performance is good (https://tulipindicators.org/benchmark)\n* - node binding contains pre-compiled windows sources (in contrast to TA-LIB, See\n*   https://github.com/oransel/node-talib)\n*/\n\n// Export statements cannot be within a loop – this must be done manually. // TODO: We could\n// have used an object and only do the export manually …\nconst Abs = addChartConfig(createIndicator(tulind.indicators.abs));\nconst Acos = addChartConfig(createIndicator(tulind.indicators.acos));\nconst Ad = addChartConfig(createIndicator(tulind.indicators.ad));\nconst Add = addChartConfig(createIndicator(tulind.indicators.add));\nconst Adosc = addChartConfig(createIndicator(tulind.indicators.adosc));\nconst Adx = addChartConfig(createIndicator(tulind.indicators.adx));\nconst Adxr = addChartConfig(createIndicator(tulind.indicators.adxr));\nconst Ao = addChartConfig(createIndicator(tulind.indicators.ao));\nconst Apo = addChartConfig(createIndicator(tulind.indicators.apo));\nconst Aroon = addChartConfig(createIndicator(tulind.indicators.aroon));\nconst Aroonosc = addChartConfig(createIndicator(tulind.indicators.aroonosc));\nconst Asin = addChartConfig(createIndicator(tulind.indicators.asin));\nconst Atan = addChartConfig(createIndicator(tulind.indicators.atan));\nconst Atr = addChartConfig(createIndicator(tulind.indicators.atr));\nconst Avgprice = addChartConfig(createIndicator(tulind.indicators.avgprice));\n\nconst Bbands = addChartConfig(createIndicator(tulind.indicators.bbands));\nconst Bop = addChartConfig(createIndicator(tulind.indicators.bop));\n\nconst Cci = addChartConfig(createIndicator(tulind.indicators.cci));\nconst Ceil = addChartConfig(createIndicator(tulind.indicators.ceil));\nconst Cmo = addChartConfig(createIndicator(tulind.indicators.cmo));\nconst Cos = addChartConfig(createIndicator(tulind.indicators.cos));\nconst Cosh = addChartConfig(createIndicator(tulind.indicators.cosh));\nconst Crossany = addChartConfig(createIndicator(tulind.indicators.crossany));\nconst Crossover = addChartConfig(createIndicator(tulind.indicators.crossover));\nconst Cvi = addChartConfig(createIndicator(tulind.indicators.cvi));\n\nconst Decay = addChartConfig(createIndicator(tulind.indicators.decay));\nconst Dema = addChartConfig(createIndicator(tulind.indicators.dema));\nconst Di = addChartConfig(createIndicator(tulind.indicators.di));\nconst Div = addChartConfig(createIndicator(tulind.indicators.div));\nconst Dm = addChartConfig(createIndicator(tulind.indicators.dm));\nconst Dpo = addChartConfig(createIndicator(tulind.indicators.dpo));\nconst Dx = addChartConfig(createIndicator(tulind.indicators.dx));\n\nconst Edecay = addChartConfig(createIndicator(tulind.indicators.edecay));\nconst Ema = addChartConfig(createIndicator(tulind.indicators.ema));\nconst Emv = addChartConfig(createIndicator(tulind.indicators.emv));\nconst Exp = addChartConfig(createIndicator(tulind.indicators.exp));\n\nconst Fisher = addChartConfig(createIndicator(tulind.indicators.fisher));\nconst Floor = addChartConfig(createIndicator(tulind.indicators.floor));\nconst Fosc = addChartConfig(createIndicator(tulind.indicators.fosc));\n\nconst Hma = addChartConfig(createIndicator(tulind.indicators.hma));\n\nconst Kama = addChartConfig(createIndicator(tulind.indicators.kama));\nconst Kvo = addChartConfig(createIndicator(tulind.indicators.kvo));\n\nconst Lag = addChartConfig(createIndicator(tulind.indicators.lag));\nconst Linreg = addChartConfig(createIndicator(tulind.indicators.linreg));\nconst Linregintercept = addChartConfig(createIndicator(tulind.indicators.linregintercept));\nconst Linregslope = addChartConfig(createIndicator(tulind.indicators.linregslope));\nconst Ln = addChartConfig(createIndicator(tulind.indicators.ln));\nconst Log10 = addChartConfig(createIndicator(tulind.indicators.log10));\n\nconst Macd = addChartConfig(createIndicator(tulind.indicators.macd));\nconst Marketfi = addChartConfig(createIndicator(tulind.indicators.marketfi));\nconst Mass = addChartConfig(createIndicator(tulind.indicators.mass));\nconst Max = addChartConfig(createIndicator(tulind.indicators.max));\nconst Md = addChartConfig(createIndicator(tulind.indicators.md));\nconst Medprice = addChartConfig(createIndicator(tulind.indicators.medprice));\nconst Mfi = addChartConfig(createIndicator(tulind.indicators.mfi));\nconst Min = addChartConfig(createIndicator(tulind.indicators.min));\nconst Mom = addChartConfig(createIndicator(tulind.indicators.mom));\nconst Msw = addChartConfig(createIndicator(tulind.indicators.msw));\nconst Mul = addChartConfig(createIndicator(tulind.indicators.mul));\n\nconst Natr = addChartConfig(createIndicator(tulind.indicators.natr));\nconst Nvi = addChartConfig(createIndicator(tulind.indicators.nvi));\n\nconst Obv = addChartConfig(createIndicator(tulind.indicators.obv));\n\nconst Ppo = addChartConfig(createIndicator(tulind.indicators.ppo));\nconst Psar = addChartConfig(createIndicator(tulind.indicators.psar));\nconst Pvi = addChartConfig(createIndicator(tulind.indicators.pvi));\n\nconst Qstick = addChartConfig(createIndicator(tulind.indicators.qstick));\n\nconst Roc = addChartConfig(createIndicator(tulind.indicators.roc));\nconst Rocr = addChartConfig(createIndicator(tulind.indicators.rocr));\nconst Round = addChartConfig(createIndicator(tulind.indicators.round));\nconst Rsi = addChartConfig(createIndicator(tulind.indicators.rsi));\n\nconst Sin = addChartConfig(createIndicator(tulind.indicators.sin));\nconst Sinh = addChartConfig(createIndicator(tulind.indicators.sinh));\nconst Sma = addChartConfig(createIndicator(tulind.indicators.sma));\nconst Sqrt = addChartConfig(createIndicator(tulind.indicators.sqrt));\nconst Stddev = addChartConfig(createIndicator(tulind.indicators.stddev));\nconst Stderr = addChartConfig(createIndicator(tulind.indicators.stderr));\nconst Stoch = addChartConfig(createIndicator(tulind.indicators.stoch));\nconst StochRSI = addChartConfig(createIndicator(tulind.indicators.stochrsi));\nconst Sub = addChartConfig(createIndicator(tulind.indicators.sub));\nconst Sum = addChartConfig(createIndicator(tulind.indicators.sum));\n\nconst Tan = addChartConfig(createIndicator(tulind.indicators.tan));\nconst Tanh = addChartConfig(createIndicator(tulind.indicators.tanh));\nconst Tema = addChartConfig(createIndicator(tulind.indicators.tema));\nconst Todeg = addChartConfig(createIndicator(tulind.indicators.todeg));\nconst Torad = addChartConfig(createIndicator(tulind.indicators.torad));\nconst Tr = addChartConfig(createIndicator(tulind.indicators.tr));\nconst Trima = addChartConfig(createIndicator(tulind.indicators.trima));\nconst Trix = addChartConfig(createIndicator(tulind.indicators.trix));\nconst Trunc = addChartConfig(createIndicator(tulind.indicators.trunc));\nconst Tsf = addChartConfig(createIndicator(tulind.indicators.tsf));\nconst Typprice = addChartConfig(createIndicator(tulind.indicators.typprice));\n\nconst Ultosc = addChartConfig(createIndicator(tulind.indicators.ultosc));\n\n// One exception: var becomes Variance as var is a protected word\nconst Variance = addChartConfig(createIndicator(tulind.indicators.var));\nconst Vhf = addChartConfig(createIndicator(tulind.indicators.vhf));\nconst Vidya = addChartConfig(createIndicator(tulind.indicators.vidya));\nconst Volatility = addChartConfig(createIndicator(tulind.indicators.volatility));\nconst Vosc = addChartConfig(createIndicator(tulind.indicators.vosc));\nconst Vwma = addChartConfig(createIndicator(tulind.indicators.vwma));\n\nconst Wad = addChartConfig(createIndicator(tulind.indicators.wad));\nconst Wcprice = addChartConfig(createIndicator(tulind.indicators.wcprice));\nconst Wilders = addChartConfig(createIndicator(tulind.indicators.wilders));\nconst Willr = addChartConfig(createIndicator(tulind.indicators.willr));\nconst Wma = addChartConfig(createIndicator(tulind.indicators.wma));\n\nconst Zlema = addChartConfig(createIndicator(tulind.indicators.zlema));\n\n\n\n\nexport default {\n    Abs, Acos, Ad, Add, Adosc, Adx, Adxr, Ao, Apo, Aroon, Aroonosc, Asin, Atan, Atr, Avgprice,\n    Bbands, Bop, Cci, Ceil, Cmo, Cos, Cosh, Crossany, Crossover, Cvi, Decay, Dema, Di, Div, Dm, Dpo,\n    Dx, Edecay, Ema, Emv, Exp, Fisher, Floor, Fosc, Hma, Kama, Kvo, Lag, Linreg, Linregintercept,\n    Linregslope, Ln, Log10, Macd, Marketfi, Mass, Max, Md, Medprice, Mfi, Min, Mom, Msw, Mul, Natr,\n    Nvi, Obv, Ppo, Psar, Pvi, Qstick, Roc, Rocr, Round, Rsi, Sin, Sinh, Sma, Sqrt, Stddev, Stderr,\n    Stoch, StochRSI, Sub, Sum, Tan, Tanh, Tema, Todeg, Torad, Tr, Trima, Trix, Trunc, Tsf, Typprice,\n    Ultosc, Variance, Vhf, Vidya, Volatility, Vosc, Vwma, Wad, Wcprice, Wilders, Willr, Wma, Zlema,\n};\n\n\n"],"file":"indicators.mjs"}